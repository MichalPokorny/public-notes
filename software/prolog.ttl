:prolog rdfs:label "Prolog" .

:prolog :note """
	http://sewiki.iai.uni-bonn.de/research/pdt/docs/v2.0/getting_started

	Prolog = unifikace + backtracking

	IDE: Eclipse + PDT

	write(X), read(X).

	X == Y: NEUNIFIKUJE, kontroluje jestli to fakt ukazuje na uplne stejny objekt

	Prolog: statistics(walltime,X).

	X =.. [jmeno, arg1, arg2, ...]
		je dynamicke zavolani X = jmeno(arg1,arg2,...)

	select/3: (?X, ?List1, ?List2) - list2 = list1 - X

	see/1: vezme si jmeno souboru
	seen/0
	seeing/1: dotaz na aktualni vstupni proud
	podobne pro write tell/1, telling/1, told/0
	konzole: see(user).
	unifikuje se, muzu napsat read(bod(X,Y)).
	konec souboru: end_of_file, podruhe chyba
	write(t(a,b)) - vypise, ale bez tecky.
	repeat. repeat :- repeat.
	cteni znaku: get(znak).
	get0(znak) cte i mezery
	skip/1: cte az do prvniho vyskytu X, at_end_of_file/0, .....

	integer(X), number(2), atom(ahoj), atomic (=atom plus cislo),
	var(X), ground(X), novar(X).
		takhle se da optimalizovat ruzna volani (+/-)
""" .
