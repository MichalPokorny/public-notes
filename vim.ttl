:vim :under :programs ;
	rdfs:label "Vim" ;
	:note "makeprg: muze obsahovat %, ktere se expanduje na soubor" ;
	:note ":R ls -la = scratchbuffer ls -la" ;
	:note ":Sex = split explore" ;
	:note ":bufdo s/co/naco/ge" ;
	:note ":enew" ;
	:note "ZZ" ;
	:note "Ctrl-F = obrazovka dolu, Ctrl-B = obrazovka nahoru" ;
	:note "U: undo na tomhle radku" ;
	:note "help: Ctrl-] = prejdi, Ctrl-T = zpet" ;
	:note ":set textwidth=80" ;
	:note "gq(pohyb) preformatuje" ;
	:note "{gq} = reformatuj odstavec" ;
	:note ":marks" ;
	:note "'' nebo ``: pred poslednim skokem" ;
	:note "<> = zacatek/konec vizualni oblasti" ;
	:note "C-N, C-P" ;
	:note "& = repeat replace" ;
	:note "Command-T: fuzzy search in Vim" ;
	:note ":s, :g" ;
	:note "\\| v map?" ;
	:note ":map xx ..." ;
	:note ":silent !echo ..." ;
	:note "[m ]m == move by methods in structured language" ;
	:note "list, listchars: highlighting of trailing spaces, tabs etc." ;
	:note "'r <Enter>' je priblizne opak J" ;
	:note ":set spell => [s ]s zg(add to dict) z=(suggest correctly spelled words)" ;
	:note "autowrite" ;
	:note "display=uhex,lastline (unprintable are shown as <XX>, partial last line shown)" ;
	:note "set diffopt=filler,context=0" ;
	:note "g-/g+ = prechod v case +- (jine undo)" ;
	:note "set iskeyword-=_ zpusobi, ze _ oddeluje 'slova'" ;
	:note "aw = 'predchozi slovo'" ;
	:note "zz = vertikalne vystred" ;
	:note "it = inside tag (textovy objekt)" ;
	:note "bind key to run (how do I bind quickly?)" ;
	:note "`` == jump between last marks" ;
	:note "Ctrl-C/[ misto Esc" ;
	:note "\\< \\>: left/right word boundary" .

:vim-commentary rdfs:label "vim-commentary" ;
	:plugin-of :vim ;
	:note "\\\\(motion) = zakomentuj" .

:vim-rails rdfs:label "rails.vim" ;
	:plugin-of :vim ;
	:note ":A == switch production/test" .

:vim :note "slowdown.vim" ;
	:note "NERD tree" ;
	:note "github vim-android" ;
	:note "VimTextObj: text objects for function args" ;
	:note "vim-rspec" ;
	:note "identify most frequent actions, map to Leader, leader as space" ;
	:note "select pasted text: noremap gV `[v`]" .

("YouCompleteMe - podle subsekvence") :plugin-of :vim .
("Nerd Commenter") :plugin-of :vim .
("vim-fugitive: blame (Git)") :plugin-of :vim .
:vim :note "RenameFile (todo?)" ;
	:note "'imal <C-l> <space>=><space>' == 'insert hash rocket in insert mode using C-l'" ;
	:note ":map ,t :w\\|..." .

:vim :note """
	:set cinoptions

	:scriptnames		show all scripts loaded upon startup
	:options
	:set patchmode=.orig	save original version
	:qall			quit all windows
	:wall			save all windows
	:s///p			print all changed lines
	:/pattern/-1		one line before
	:?pattern?		search backward

	:...C-D			see completion list

	ge			previous word end
	W, B, E, gE		the same for whitespace-separated words
	t, T			same as f, but stops before the character
	zz			center current line on screen
	visual:o, O		edit other end (, corner) of selection
	"A..Z			append to register (works even when recording)
	C-X C-F			autocomplete file name (and many other such tricks)
	gj, gk			move by visible lines
	/.../e			move to end of matching text (also e+1, e-1 etc.)
	/...\\_s.../		match space or line break
	g?			rot-13
	s			the same as cl
	S			the same as cc
	U			undo all changes on the same line

	C-W p			goto previously active window
	C-W r/R			rotate windows
	[<num>] C-W +/-		increase/decrease window height
	[<num>] C-W >/<		increase/decrease window width
	<num> C-W _/|		set window height/width
	:all			open all edited files in windows
	:ball			open all buffers in windows
	:windo <cmd>		execute <cmd> in all windows
	:bufdo <cmd>		... in all buffers
	C-W P			goto preview window
	C-W z			close preview window

	C-], C-T, C-W ]		find tag, jump back, find tag in other window
	C-W }			preview function def in other window
	[#, ]#			previous, next CPP construct
	[[, ]], ][		prev, next top-level block, end of current
	[{, ]}			prev, next block
	[(, ])			prev, next subexpression
	[/, ]/			start of comment, end of comment
	gD, gd			goto definition, only in current function

	text objects:
	a( = a) = ab		a parenthesized block
	aB			{...} block
	aW			white-space separated word
	aw, ap, as		word, paragraph, sentence
""" .

:vim :note """
	Marks:
		`[ = start of pasted text, `] = end of pasted text,
		`[V`]>> indentne pasted text
""" .

:vim :note "Editing text at the speed of thought: #52 (75/329)" .
:vim :note "Medved: pomlcka misto mezery pred kterou nic neni" .
